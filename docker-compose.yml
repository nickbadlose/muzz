version: "3.9"

services:
  api:
    container_name: api
    profiles: ["api"]
    restart: always
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PORT: ${PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE: ${DATABASE}
      LOG_LEVEL: ${LOG_LEVEL}
      DOMAIN_NAME: ${DOMAIN_NAME}
      JWT_DURATION: ${JWT_DURATION}
      JWT_SECRET: ${JWT_SECRET}
      GEOIP_API_KEY: ${GEOIP_API_KEY}
      GEOIP_ENDPOINT: ${GEOIP_ENDPOINT}
      CACHE_PASSWORD: ${CACHE_PASSWORD}
      CACHE_HOST: ${CACHE_HOST}
      JAEGER_HOST: ${JAEGER_HOST}
      DEBUG_ENABLED: ${DEBUG_ENABLED}
    build:
      target: development
      context: .
      args:
        - GOLANG_VERSION=1.22.4
        - ALPINE_VERSION=3.20
    ports:
      - "3000:3000"
    links:
      - db
      - cache
      - tracing
    networks:
      - api

  db:
    container_name: postgis
    image: postgis/postgis:16-3.4
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE}
    volumes:
      - source: database
        target: /var/lib/postgresql/data
        type: volume
    ports:
      - "5432:5432"
    networks:
      - api

  cache:
    container_name: redis
    image: redis:7.2.5
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - cache:/data
    networks:
      - api
    entrypoint: redis-server --appendonly yes --requirepass ${CACHE_PASSWORD}

  tracing:
    container_name: jaeger
    image: "jaegertracing/all-in-one:latest"
    restart: always
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - api

  adminer:
    image: adminer:4.8.1-standalone
    restart: always
    ports:
      - "8080:8080"
    links:
      - db
    networks:
      - api

volumes:
  database: {}
  cache: {}

networks:
  api:
    driver: bridge
    internal: false
